[{"C:\\Local Drive D\\React\\photo-app\\src\\index.js":"1","C:\\Local Drive D\\React\\photo-app\\src\\App.js":"2","C:\\Local Drive D\\React\\photo-app\\src\\reportWebVitals.js":"3","C:\\Local Drive D\\React\\photo-app\\src\\TopBar.js":"4","C:\\Local Drive D\\React\\photo-app\\src\\ImageSearchPage.js":"5","C:\\Local Drive D\\React\\photo-app\\src\\request.js":"6","C:\\Local Drive D\\React\\photo-app\\src\\export.js":"7","C:\\Local Drive D\\React\\photo-app\\src\\components\\HomePage\\HomePage.js":"8","C:\\Local Drive D\\React\\photo-app\\src\\components\\Pagination\\Pagination.js":"9","C:\\Local Drive D\\React\\photo-app\\src\\components\\ImageDetails\\ImageDetails.js":"10","C:\\Local Drive D\\React\\photo-app\\src\\pages\\Home.js":"11","C:\\Local Drive D\\React\\photo-app\\src\\pages\\ImageDetails.js":"12","C:\\Local Drive D\\React\\photo-app\\src\\reducers\\index.js":"13","C:\\Local Drive D\\React\\photo-app\\src\\actions\\index.js":"14","C:\\Local Drive D\\React\\photo-app\\src\\reducers\\image.reducer.js":"15","C:\\Local Drive D\\React\\photo-app\\src\\components\\Header\\navbars.js":"16"},{"size":565,"mtime":1609622912344,"results":"17","hashOfConfig":"18"},{"size":1069,"mtime":1609675422626,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":864,"mtime":1609149508192,"results":"21","hashOfConfig":"18"},{"size":3396,"mtime":1609149910573,"results":"22","hashOfConfig":"18"},{"size":489,"mtime":1610062203226,"results":"23","hashOfConfig":"18"},{"size":97,"mtime":1610065945004,"results":"24","hashOfConfig":"18"},{"size":2335,"mtime":1610065993596,"results":"25","hashOfConfig":"18"},{"size":5254,"mtime":1609162593489,"results":"26","hashOfConfig":"18"},{"size":2179,"mtime":1610067602958,"results":"27","hashOfConfig":"18"},{"size":1245,"mtime":1610064387806,"results":"28","hashOfConfig":"18"},{"size":358,"mtime":1610064619414,"results":"29","hashOfConfig":"18"},{"size":124,"mtime":1609596548736,"results":"30","hashOfConfig":"18"},{"size":0,"mtime":1609591218650,"results":"31","hashOfConfig":"18"},{"size":0,"mtime":1609596653134,"results":"32","hashOfConfig":"18"},{"size":846,"mtime":1609766286049,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"kxydb1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Local Drive D\\React\\photo-app\\src\\index.js",[],["73","74"],"C:\\Local Drive D\\React\\photo-app\\src\\App.js",["75"],"import React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport ImageDetail from \"./pages/ImageDetails\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport TopBar from \"./TopBar\";\nimport ImageSearchPage from \"./ImageSearchPage\";\nimport \"./App.css\";\nimport {Provider} from 'react-redux';\nimport {createStore } from 'redux';\nimport rootReducer from './reducers';\nimport Navbars from \"./components/Header/navbars\";\n\n\nexport const  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst history = createHistory();\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n      <Router history={history}>        \n      <Navbars/>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/imagesearch\" exact component={ImageSearchPage} />        \n        <Route exact path={'/image/:id'} component={ImageDetail}/>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\nexport default App;","C:\\Local Drive D\\React\\photo-app\\src\\reportWebVitals.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\TopBar.js",["76","77"],"import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { withRouter } from \"react-router-dom\";\r\nfunction TopBar({ location }) {\r\n  React.useEffect(() => {});\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Photo App</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\" active={location.pathname == \"/\"}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            href=\"/imagesearch\"\r\n            active={location.pathname == \"/imagesearch\"}\r\n          >\r\n            Search\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default withRouter(TopBar);","C:\\Local Drive D\\React\\photo-app\\src\\ImageSearchPage.js",["78"],"import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport { masonryOptions } from \"./export\";\r\nimport { searchImages } from \"./request\";\r\nconst schema = yup.object({\r\n  keyword: yup.string().required(\"Keyword is required\")\r\n});\r\nfunction ImageSearchPage() {\r\n  const [images, setImages] = React.useState([]);\r\n  const [keyword, setKeyword] = React.useState([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const [total, setTotal] = React.useState(0);\r\n  const [searching, setSearching] = React.useState(false);\r\n  const handleSubmit = async evt => {\r\n    const isValid = await schema.validate(evt);\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    setKeyword(evt.keyword);\r\n    searchAllImages(evt.keyword, 1);\r\n  };\r\n  const searchAllImages = async (keyword, pg = 1) => {\r\n    setSearching(true);\r\n  const response = await searchImages(keyword, page);\r\n    let imgs = response.data.hits;\r\n    setImages(imgs);\r\n    setTotal(response.data.total);\r\n    setPage(pg);\r\n  };\r\n  const getMoreImages = async () => {\r\n    let pg = page;\r\n    pg++;\r\n    const response = await searchImages(keyword, pg);\r\n    const imgs = images.concat(response.data.hits);\r\n    setImages(imgs);\r\n    setTotal(response.data.total);\r\n    setPage(pg);\r\n  };\r\n  React.useEffect(() => {});\r\n  return (\r\n    <div className=\"page\">\r\n      <h1 className=\"text-center\">Search</h1>\r\n      <Formik validationSchema={schema} onSubmit={handleSubmit}>\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isInvalid,\r\n          errors\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"keyword\">\r\n                <Form.Label>Keyword</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  placeholder=\"Keyword\"\r\n                  value={values.keyword || \"\"}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.keyword && errors.keyword}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.keyword}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\" style={{ marginRight: \"10px\" }}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <br />\r\n      <InfiniteScroll\r\n        pageStart={1}\r\n        loadMore={getMoreImages}\r\n        hasMore={searching && total > images.length}\r\n      >\r\n        <Masonry\r\n          className={\"grid\"}\r\n          elementType={\"div\"}\r\n          options={masonryOptions}\r\n          disableImagesLoaded={false}\r\n          updateOnEachImageLoad={false}\r\n        >\r\n          {images.map((img, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <img src={img.previewURL} style={{ width: 300 }} />\r\n              </div>\r\n            );\r\n          })}\r\n        </Masonry>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\nexport default ImageSearchPage;","C:\\Local Drive D\\React\\photo-app\\src\\request.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\export.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\components\\HomePage\\HomePage.js",["79","80","81"],"C:\\Local Drive D\\React\\photo-app\\src\\components\\Pagination\\Pagination.js",["82","83","84"],"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n// ...\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  }\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n  \n  render() {\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","C:\\Local Drive D\\React\\photo-app\\src\\components\\ImageDetails\\ImageDetails.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\pages\\Home.js",["85"],"C:\\Local Drive D\\React\\photo-app\\src\\pages\\ImageDetails.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\reducers\\index.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\actions\\index.js",[],["86","87"],"C:\\Local Drive D\\React\\photo-app\\src\\reducers\\image.reducer.js",[],"C:\\Local Drive D\\React\\photo-app\\src\\components\\Header\\navbars.js",["88","89"],"import React, { useState } from 'react';\nimport './navbars.scss';\n\n\nclass Navbars extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      isOpen:  []\n       //storageOptions: this.props.product.variants[0].pricingOptions\n    }\n    \n };\n componentDidMount() { \n};\nmyFunction() {\n  debugger;\n  var x = document.getElementById(\"myTopnav\");\n  if (x.className === \"topnav\") {\n    x.className += \" responsive\";\n  } else {\n    x.className = \"topnav\";\n  }\n}\nrender() {\n  return (\n    <div>\n      <div class=\"topnav\" id=\"myTopnav\">\n  <a href=\"#home\" class=\"active\">Home</a>\n  <a href=\"#news\">News</a>\n  <a href=\"#contact\">Contact</a>\n  <a href=\"#about\">About</a>\n  <a href=\"#\" class=\"icon\" onClick={() => this.myFunction()}>\n    <i class=\"fa fa-bars\"></i>\n  </a>\n</div>\n    </div>\n  );\n}\n}\n\nexport default Navbars;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":13,"column":56,"nodeType":"100","messageId":"101","endLine":13,"endColumn":58},{"ruleId":"98","severity":1,"message":"99","line":18,"column":39,"nodeType":"100","messageId":"101","endLine":18,"endColumn":41},{"ruleId":"102","severity":1,"message":"103","line":98,"column":17,"nodeType":"104","endLine":98,"endColumn":68},{"ruleId":"94","severity":1,"message":"105","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":24,"column":3,"nodeType":"108","endLine":24,"endColumn":18,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"103","line":49,"column":47,"nodeType":"104","endLine":49,"endColumn":100},{"ruleId":"110","severity":1,"message":"111","line":142,"column":19,"nodeType":"104","endLine":142,"endColumn":105},{"ruleId":"110","severity":1,"message":"111","line":151,"column":19,"nodeType":"104","endLine":151,"endColumn":102},{"ruleId":"110","severity":1,"message":"111","line":160,"column":19,"nodeType":"104","endLine":160,"endColumn":88},{"ruleId":"102","severity":1,"message":"103","line":13,"column":21,"nodeType":"104","endLine":13,"endColumn":124},{"ruleId":"90","replacedBy":"112"},{"ruleId":"92","replacedBy":"113"},{"ruleId":"94","severity":1,"message":"114","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":34,"column":3,"nodeType":"104","endLine":34,"endColumn":62},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'TopBar' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Pagination' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInitialized'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initialized, getAllImages] as a second argument to the useEffect Hook.","MemberExpression",["117"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["115"],["116"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Add dependencies array: [initialized, getAllImages]",{"range":"120","text":"121"},[988,988],", [initialized, getAllImages]"]